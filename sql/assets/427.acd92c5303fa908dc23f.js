"use strict";(self.webpackChunk_basthon_basthon_console=self.webpackChunk_basthon_basthon_console||[]).push([[427],{427:(e,t,r)=>{r.r(t),r.d(t,{KernelOCaml:()=>l});var n=r(7867);class l extends n.H{constructor(e){super(e)}language(){return"ocaml"}languageName(){return"OCaml"}moduleExts(){return["ml"]}async launch(){const{__kernel__:e}=await Promise.all([r.e(641),r.e(686)]).then(r.t.bind(r,4641,23));this.__kernel__=e,this.restart()}async evalAsync(e,t,r,n=null){var l;if(null==this.__kernel__)return;n.interactive=!0,this.__kernel__.io.stdout=t,this.__kernel__.io.stderr=r,this.execution_count++;let s=null===(l=this.__kernel__)||void 0===l?void 0:l.exec(e);return this.__kernel__.io.stdout=console.log,this.__kernel__.io.stderr=console.error,s="string"==typeof s&&s.length>0?{"text/plain":s.replace(/\n$/,"")}:void 0,[s,this.execution_count]}restart(){var e;if(0!==(null===(e=this.__kernel__)||void 0===e?void 0:e.init()))throw new Error("Can't start OCaml kernel!");this.execution_count=0}putFile(e,t){if(null==this.__kernel__)return;t=new Uint8Array(t);const r=new TextDecoder("utf-8").decode(t);this.__kernel__.createfile(e,r)}putModule(e,t){}userModules(){return[]}getFile(e){}getUserModuleFile(e){}more(e){return!1}banner(){return"        OCaml version 4.11.1\n"}ps1(){return"# "}ps2(){return"  "}complete(e){return[]}}}}]);
//# sourceMappingURL=427.acd92c5303fa908dc23f.js.map