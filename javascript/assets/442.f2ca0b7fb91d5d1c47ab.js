"use strict";(self.webpackChunk_basthon_basthon_console=self.webpackChunk_basthon_basthon_console||[]).push([[442],{9442:(e,t,n)=>{n.r(t),n.d(t,{KernelJavaScript:()=>r});var o=n(7867);class r extends o.H{constructor(e){super(e),this._context={Basthon:void 0,Jupyter:void 0,window:void 0},this.execution_count=0}language(){return"javascript"}languageName(){return"Javascript"}moduleExts(){return["js"]}async launch(){}eval(e){try{return window.eval(`with(Basthon._context) { ${e} }`)}catch(t){if(t instanceof SyntaxError)return new Function(`with(this) { ${e} }`).call(this._context);throw t}}async evalAsync(e,t,n,o=null){o.interactive=!0;const r=console.log,s=console.error;let c;console.log=t,console.error=n,this.execution_count++;try{c=this.eval(e)}catch(e){console.error(`Uncaught ${e.name||""}: ${null==e?void 0:e.message}`)}return console.log=r,console.error=s,void 0!==c&&(c={"text/plain":JSON.stringify(c)}),[c,this.execution_count]}ps1(){return" js> "}ps2(){return"...> "}restart(){}more(e){return!1}complete(e){return[]}putFile(e,t){console.error(`Fichier ${e} not added since putFile has no mean in the JS context.`)}putModule(e,t){if(t=new Uint8Array(t),"js"!==e.split(".").pop())throw{message:"Only '.js' files supported."};{const e=new TextDecoder("utf-8").decode(t);this.eval(e)}}}}}]);
//# sourceMappingURL=442.f2ca0b7fb91d5d1c47ab.js.map